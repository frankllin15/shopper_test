// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Driver {
  id          Int      @id @default(autoincrement())
  name        String
  resume      String
  car         String
  carImage    String?
  ratings     Rating[]
  tax         Float
  minDistance Float
  rides       Ride[]
}

model Rating {
  id       Int     @id @default(autoincrement())
  value    Int
  comment  String?
  driverId Int
  driver   Driver  @relation(fields: [driverId], references: [id])
}

model CalculatedRoute {
  id          Int    @id @default(autoincrement())
  origin      String
  destination String
  distance    Float
  duration    String
  ride        Ride[]
  apiResponse String

  @@unique([destination, origin])
}

model Ride {
  id            Int             @id @default(autoincrement())
  driverId      Int
  driver        Driver          @relation(fields: [driverId], references: [id])
  customerId    Int
  customer      Customer        @relation(fields: [customerId], references: [id])
  routeId       Int
  route         CalculatedRoute @relation(fields: [routeId], references: [id])
  value         Float
  ratingNote    Int?
  ratingComment String?
  date          DateTime        @default(now())
}

model Customer {
  id       Int    @id @default(autoincrement())
  name     String
  document String @unique
  rides    Ride[]
}
